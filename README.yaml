name: "aws-eks-prometheus-scraper"
# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-eks-prometheus-scraper"
# Short description of this project
description: |-
  This component provisions the an Amazon Managed collector or scraper to connect Amazon Managed Prometheus (AMP) with an
  EKS cluster.

  A common use case for Amazon Managed Service for Prometheus is to monitor Kubernetes clusters managed by Amazon Elastic
  Kubernetes Service (Amazon EKS). Kubernetes clusters, and many applications that run within Amazon EKS, automatically
  export their metrics for Prometheus-compatible scrapers to access.

  Amazon Managed Service for Prometheus provides a fully managed, agentless scraper, or collector, that automatically
  discovers and pulls Prometheus-compatible metrics. You don't have to manage, install, patch, or maintain agents or
  scrapers. An Amazon Managed Service for Prometheus collector provides reliable, stable, highly available, automatically
  scaled collection of metrics for your Amazon EKS cluster. Amazon Managed Service for Prometheus managed collectors work
  with Amazon EKS clusters, including EC2 and Fargate.

  An Amazon Managed Service for Prometheus collector creates an Elastic Network Interface (ENI) per subnet specified when
  creating the scraper. The collector scrapes the metrics through these ENIs, and uses remote_write to push the data to
  your Amazon Managed Service for Prometheus workspace using a VPC endpoint. The scraped data never travels on the public
  internet.
usage: |-
  **Stack Level**: Regional

  Here's an example snippet for how to use this component.

  ```yaml
  components:
    terraform:
      eks/prometheus-scraper:
        vars:
          enabled: true
          name: prometheus-scraper
          # This refers to the `managed-prometheus/workspace` Terraform component,
          # but the component name can be whatever you choose to name the stack component
          prometheus_component_name: prometheus
  ```

  ### Authenticating with EKS

  In order for this managed collector to authenticate with the EKS cluster, update auth map after deploying.

  Note the `scraper_role_arn` and `clusterrole_username` outputs and set them to `rolearn` and `username` respectively
  with the `map_additional_iam_roles` input for `eks/cluster`.

  ```yaml
  components:
    terraform:
      eks/cluster:
        vars:
          map_additional_iam_roles:
            # this role is used to grant the Prometheus scraper access to this cluster. See eks/prometheus-scraper
            - rolearn: "arn:aws:iam::111111111111:role/AWSServiceRoleForAmazonPrometheusScraper_111111111111111"
              username: "acme-plat-ue2-sandbox-prometheus-scraper"
              groups: []
  ```

  Then reapply the given cluster component.

  <!-- prettier-ignore-start -->
  <!-- prettier-ignore-end -->
references:
  - name: cloudposse-terraform-components
    url: https://github.com/orgs/cloudposse-terraform-components/repositories
    description: Cloud Posse's upstream component
  - name: AMP Collector Documentation
    url: https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-eks-setup
    description: ""
tags:
  - component/eks/prometheus-scraper
  - layer/grafana
  - provider/aws
  - provider/helm
# Categories of this project
categories:
  - component/eks/prometheus-scraper
  - layer/grafana
  - provider/aws
  - provider/helm
# License of this project
license: "APACHE2"
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse-terraform-components/aws-eks-prometheus-scraper.svg?style=for-the-badge
    url: https://github.com/cloudposse-terraform-components/aws-eks-prometheus-scraper/releases/latest
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com
related:
  - name: "Cloud Posse Terraform Modules"
    description: Our collection of reusable Terraform modules used by our reference architectures.
    url: "https://docs.cloudposse.com/modules/"
  - name: "Atmos"
    description: "Atmos is like docker-compose but for your infrastructure"
    url: "https://atmos.tools"
contributors: [] # If included generates contribs
